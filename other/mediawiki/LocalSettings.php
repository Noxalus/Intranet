<?php
# This file was automatically generated by the MediaWiki 1.20.4
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename      = "MTI Wiki";
$wgMetaNamespace = "MTI_Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "/Intranet/other/mediawiki";
$wgScriptExtension  = ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer           = "http://localhost";

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "$wgStylePath/common/images/wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "apache@localhost";
$wgPasswordSender   = "apache@localhost";

$wgEnotifUserTalk      = false; # UPO
$wgEnotifWatchlist     = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "localhost";
$wgDBname           = "intranet";
$wgDBuser           = "root";
$wgDBpassword       = "";

# MySQL specific settings
$wgDBprefix         = "wiki_";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType    = CACHE_ACCEL;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads  = false;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "fr";

$wgSecretKey = "854c7c08a995f123a8dcf51d4d4333432aed28f923fd38a5212e916e1717a7c0";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "2f28a1f7b86143da";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl  = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;



# End of automatically generated settings.
# Add more configuration options below.

$wgAuthSymfony_useExtDb = false; // if true, fill out db info below
//$wgAuthSymfony_host = '';
//$wgAuthSymfony_username = '';
//$wgAuthSymfony_password = '';
//$wgAuthSymfony_database = '';
 
$wgAuthSymfony_login_credential = 'wiki_read'; // credential required to allow logins. leave blank if everyone can log in
$wgAuthSymfony_editor_credential = 'wiki_edit';  // credential required to allow editing. leave blank if everyone can edit
$wgAuthSymfony_sysop_credential = 'admin'; // credentials to be an admin.
 
$wgGroupPermissions['*'] = array(); // no rights for anonymous users
$wgGroupPermissions['*']['read'] = true; // except viewing
 
$wgGroupPermissions['editor'] = $wgGroupPermissions['user']; // this lets us control who's a "normal user"
$wgGroupPermissions['user'] = array(); // logged-in users have no rights by default
$wgGroupPermissions['editor']['createaccount'] = false; // no one can make an account on their own
 
$wgGroupPermissions['bureaucrat'] = array(); // not using this one, as Symfony does rights management
 
$wgGroupPermissions['sysop']['createaccount'] = false; // No one makes accounts!
 
// If we don't want anonymous users to be able to use the site, do this:
$wgGroupPermissions['*']['read'] = false; // Disable viewing by anonymous users
$wgWhitelistRead =  array ("Special:Userlogin"/*, "Main Page", "Help:Contents"*/); // but let them log in
 
require_once("$IP/extensions/AuthSymfony/AuthSymfony.php");
$wgAuth = new AuthSymfony();

